import "macros.del";
import "testSettings.json";

globalvar define OPTIONS;

playervar define molotov;
playervar define v_vel;
playervar define p_pos;
playervar define s_inispeed;
playervar define m_mass;
playervar define g_grav;
playervar define d_dt;
playervar define t_airtime;
playervar define e_gravforce;
playervar define f_force_on_proj;
playervar define l_array;

rule: "init"
Event.OngoingPlayer
if (IsUltHeld())
{
    Communicate(player, Communication.Incoming);

    if (EntityExists(l_array))
    {
        DestroyEffect(FirstOf(l_array));
        DestroyEffect(l_array[1]);
    }

    p_pos = EyePosition();
    s_inispeed = 25;
    v_vel = FacingDirectionOf() * s_inispeed;
    m_mass = 1;
    g_grav = 9.800;
    d_dt = 0.016;
    t_airtime = 0;

    CreateEffect(all, Effect.BadAura, Color.Yellow, p_pos, 0.100);
    l_array[0] = LastCreatedEntity();
    CreateEffect(all, Effect.BadAura, Color.Red, p_pos, 0.25);
    l_array[1] = LastCreatedEntity();

    e_gravforce = Vector(0, -1 * g_grav * m_mass);
    f_force_on_proj = e_gravforce;
}

rule: "Molotov - Movement & Effects"
Event.OngoingPlayer
if (DistanceBetween(p_pos, RayCastHitPosition(p_pos, p_pos + v_vel * d_dt * 1000, EnemyPlayers(), player, true)) >= 0.25 + s_inispeed / 100)
{
    v_vel += f_force_on_proj / m_mass * d_dt;
    p_pos += v_vel * d_dt;

    PlayEffect(all, PlayEffect.BadExplosion, Color.Orange, p_pos, 0.1);

    MinWait();
    LoopIfConditionIsTrue();

    DestroyEffect(FirstOf(l_array));
    DestroyEffect(l_array[1]);

    PlayEffect(all, PlayEffect.GoodExplosion, Color.Orange, p_pos, 5);
    PlayEffect(all, PlayEffect.RingExplosion, Color.Orange, p_pos, 6);
    PlayEffect(all, PlayEffect.DebuffImpactSound, Color.White, p_pos, 100);
    PlayEffect(all, PlayEffect.BuffImpactSound, Color.White, p_pos, 45);

    SetStatus(PlayersWithinRadius(p_pos, 6), null, Status.Burning);
    StartDamageOverTime(PlayersWithinRadius(p_pos, 6), player, 5, 25);
}